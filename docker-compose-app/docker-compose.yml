# docker-compose со всеми docker image

version: "2.3"

networks:
  default:
    external:
      name: big-data

services:

  postgres:
    image: postgres:12.0
    mem_limit: 200M
    container_name: postgres-web
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d

  mongo:
    image: mongo:4.2.0
    container_name: mongo-web
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/mongo:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo_express_web
    restart: always
    depends_on:
      - mongo
    ports:
      - "28081:8081"
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: cobalt
      ME_CONFIG_BASICAUTH_USERNAME: bergen
      ME_CONFIG_BASICAUTH_PASSWORD: bergen
      ME_CONFIG_MONGODB_SERVER: mongo

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper-web
    restart: always
    volumes:
      - "./volumes/zookeeper/data:/var/lib/zookeeper/data"
      - "./volumes/zookeeper/log:/var/lib/zookeeper/log"
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka-web
    restart: always
    ports:
      - "9092:9092"
    volumes:
      - "./volumes/kafka:/kafka"
      - "./volumes/kafka_logs:/opt/kafka/logs"
      - "./volumes/kafka_tmp_logs:/tmp/kafka-logs"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  #  hadoop:
  #    image: teivah/hadoop:2.9.2
  #    container_name: hadoop-web
  #    ports:
  #      - '50070:50070'
  #      - '9000:9000'
  #      - '50075:50075'
  #      - '50010:50010'
  #
  #  spark-master:
  #    image: bitnami/spark:3
  #    container_name: spark-master-web
  #    ports:
  #      - '7077:7077'
  #    environment:
  #      - SPARK_MODE=master
  #      - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #      - SPARK_RPC_ENCRYPTION_ENABLED=no
  #      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #      - SPARK_SSL_ENABLED=no
  #      - SPARK_WORKER_INSTANCES=1
  #
  #  spark-worker:
  #    image: bitnami/spark:3
  #    container_name: spark-worker-web
  #    depends_on:
  #      - spark-master
  #    environment:
  #      - SPARK_MODE=worker
  #      - SPARK_MASTER_URL=spark://spark-master:7077
  #      - SPARK_WORKER_MEMORY=1G
  #      - SPARK_WORKER_CORES=1
  #      - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #      - SPARK_RPC_ENCRYPTION_ENABLED=no
  #      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #      - SPARK_SSL_ENABLED=no
  #      - SPARK_DRIVER_MEMORY=128m
  #      - SPARK_EXECUTOR_MEMORY=256m

  bergen-web:
    image: big-data/web:1.0.0
    container_name: bergen-web
    restart: always
    ports:
      - "8080:8080"